import frida
import sys

#attach 程序已经处于运行状态才能进行监听hook
#模拟器启动frida-server
#运行程序开始监听，模拟器应用操作模拟，触发监听
# 连接手机设备
rdev = frida.get_remote_device()
session = rdev.attach("哔哩哔哩")  # app名字

# ----上面固定------以后只会动src中代码
# src 是字符串，写js代码
scr = """
Java.perform(function () {
    //找到类 反编译的首行+类名：tv.danmaku.biliplayerimpl.report.heartbeat下的
    var d = Java.use("tv.danmaku.biliplayerimpl.report.heartbeat.d");

    //替换类中的方法
    d.H7.implementation = function(j2,j4,i,j5, j6, i2,  i3,  j7,  str1,  i4,  str2,  str3){
        console.log("传入的参数：",j2);
        console.log("传入的参数：",j4);
        console.log("传入的参数：",i);
        console.log("传入的参数：",j5);
        console.log("传入的参数：",j6);
        console.log("传入的参数：",i2);
        console.log("传入的参数：",i3);
        console.log("传入的参数：",j7);
        console.log("传入的参数：",str1);
        console.log("传入的参数：",i4);
        console.log("传入的参数：",str2);
        console.log("传入的参数：",str3);
        var res = this.H7(j2,j4,i,j5, j6, i2,  i3,  j7,  str1,  i4,  str2,  str3); //调用原来的函数
        console.log("返回值字节数组：",res);
        return res;  // 没加密的
    }
});
"""


# -----下面固定---以后不会动
script = session.create_script(scr)

def on_message(message, data):
    print(message, data)

script.on("message", on_message)
script.load()
sys.stdin.read()

#的确走了H7方法 返回的字节数组转换为16进制，即为请求体中内容

# 传入的参数： 114085018475145
# 传入的参数： 28630322467
# 传入的参数： 1
# 传入的参数： 1743058115
# 传入的参数： 1742543780
# 传入的参数： 3
# 传入的参数： 0
# 传入的参数： 0
# 传入的参数：
# 传入的参数： 0
# 传入的参数： main.ugc-video-detail.0.0
# 传入的参数： search.search-result.0.0
# 返回值字节数组： 89,-37,109,23,86,-3,19,-98,51,-66,123,122,71,-44,-21,-53,68,-20,35,11,112,-84,49,-105,-40,-118,61,-107,-57,121,-112,81,-9,86,-47,115,-69,-92,15,-104,-57,32,-65,-57,84,25,120,42,114,-86,-69,-3,61,-99,111,-79,60,115,-20,30,-45,117,-70,101,-127,-31,-14,-52,-50,32,-103,-36,-48,-25,-37,-110,82,-46,-72,-6,-62,19,-25,-103,-73,-87,58,-92,-38,59,82,-95,123,-93,101,-71,18,-41,-97,29,-124,-18,84,27,-64,105,-92,-47,115,102,64,63,83,103,23,-10,119,25,-21,79,-85,-85,11,-42,-128,-90,62,-9,-78,-57,-7,-89,-4,-3,-102,44,7,-21,10,-2,-31,-120,-41,117,114,-10,-113,13,-51,72,-15,-70,121,87,114,-33,115,19,89,92,83,-61,-73,14,13,-58,46,88,117,107,-93,26,-23,-108,64,82,-125,-67,-54,-74,-84,5,16,51,123,10,-112,24,-51,81,-41,-72,-14,89,4,-84,-39,108,-91,-30,-30,-122,-101,38,-33,97,-94,80,-33,47,5,-111,113,63,-88,86,4,9,15,-93,33,15,-41,69,-23,-70,-117,60,91,62,-83,-47,26,17,-94,-44,-74,24,70,-61,-10,80,20,-78,-13,-36,66,-71,-68,118,-113,-26,88,-67,-4,64,90,122,-95,-10,74,33,-54,110,-104,-64,-40,-114,-31,8,83,-35,81,-82,-70,108,88,-17,-52,19,106,-57,1,107,-76,-74,-125,-96,-124,120,113,-93,-116,-77,11,-65,108,-18,-92,117,105,-25,47,14,50,-28,101,118,-65,122,33,46,-37,-7,-73,-124,-69,-38,117,78,-89,10,73,-72,-125,-33,-88,81,57,-7,0,122,-122,-70,49,-95,93,-99,-21,-82,47,81,44,5,24,3,-60,-24,33,114,-23,61